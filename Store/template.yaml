################################################
# Template for Tables - Store
################################################

AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"

################################################
# Parameters
################################################
Parameters:
  Application:
    Type: String
  Module:
    Type: String
  Environment:
    Type: String
    Default: dev2
    Description: Environment name
  LogLevel:
    Type: String
    Default: INFO
  RetentionInDays:
    Type: Number
    Default: 30
    Description: CloudWatch Logs retention period for Lambda functions
  NodeLayerArn:
    Type: AWS::SSM::Parameter::Value<String>
    Description: Node Layer NodeDependenciesLayer ARN
    

Globals:
  Function:
    Runtime: nodejs16.x
    Handler: index.handler
    Layers:
      - !Ref NodeLayerArn
    Timeout: 30
    Tracing: Active
    Environment:
      Variables:
        ENVIRONMENT: !Ref Environment
        LOG_LEVEL: !Ref LogLevelbucket

Conditions:
  IsProd: !Equals [!Ref Environment, prd]
  IsPrimary: !Equals [!Ref AWS::Region, "us-east-1"]

Mappings:
 RegionSuffix:
    "us-east-1":
      SFX1: ""
    "us-west-2":
      SFX1: "-us-west-2"

################################################
# Resources
################################################
Resources:
    
  StoreTable:
    Type: AWS::DynamoDB::GlobalTable
    DeletionPolicy: Retain
    Condition: IsPrimary
    Properties:
      TableName: !Sub ${Application}-${Environment}-Store
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: merchantAccountId
          AttributeType: S
        - AttributeName: storeStatus
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: byMerchantAccountId
          KeySchema:
            - AttributeName: merchantAccountId
              KeyType: HASH
          Projection:
            ProjectionType: ALL
        - IndexName: byStoreStatus
          KeySchema:
            - AttributeName: storeStatus
              KeyType: HASH
          Projection:
            ProjectionType: ALL
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      BillingMode: PAY_PER_REQUEST
      SSESpecification:
        SSEEnabled: true
      Replicas:
        - Region: "us-east-1"
          PointInTimeRecoverySpecification:
            PointInTimeRecoveryEnabled: true
          Tags:
            - Key: "Environment"
              Value: !Ref Environment
            - Key: "Application"
              Value: !Ref Application
        - !If 
          - IsProd
          - Region: "us-west-2"
            PointInTimeRecoverySpecification:
              PointInTimeRecoveryEnabled: true
            Tags:
              - Key: "Environment"
                Value: !Ref Environment
              - Key: "Application"
                Value: !Ref Application
          - !Ref "AWS::NoValue"

  StoreTableStreamEventMapping:
    Type: AWS::Lambda::EventSourceMapping
    Condition: IsPrimary
    Properties:
      StartingPosition: TRIM_HORIZON 
      EventSourceArn: !Sub ${StoreTable.StreamArn}
      FunctionName: !Sub ${Application}-${Environment}-ElasticSearch-Streaming-Lambda-Function
      MaximumRetryAttempts: 1 

  ################################################
  # Other Resources
  ################################################
  StoreUploadBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: 
        !Sub
          - "${Name}${Suffix}"
          - Name: !Sub "${AWS::AccountId}-${Application}-${Environment}-store-photos"
            Suffix: !FindInMap [RegionSuffix, !Ref "AWS::Region", SFX1]
      CorsConfiguration:
        CorsRules:
        - AllowedHeaders:
            - "*"
          AllowedMethods:
            - GET
            - PUT
            - HEAD
          AllowedOrigins:
            - "*"
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:*
            Function: !Sub arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:${Application}-${Environment}-Store-S3Notification-Function
          - Event: s3:ObjectRemoved:Delete
            Function: !Sub arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:${Application}-${Environment}-Store-S3Notification-Function
      PublicAccessBlockConfiguration:
            BlockPublicAcls : true
            BlockPublicPolicy : true
            IgnorePublicAcls : true
            RestrictPublicBuckets : true
      Tags:
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "Application"
          Value: !Ref Application

  UserUploadBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: 
        !Sub
          - "${Name}${Suffix}"
          - Name: !Sub "${AWS::AccountId}-${Application}-${Environment}-merchantuser-photos"
            Suffix: !FindInMap [RegionSuffix, !Ref "AWS::Region", SFX1]
      CorsConfiguration:
        CorsRules:
        - AllowedHeaders:
            - "*"
          AllowedMethods:
            - GET
            - PUT
            - HEAD
          AllowedOrigins:
            - "*"
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:*
            Function: !Sub arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:${Application}-${Environment}-MerchantUser-S3Notification-Function
          - Event: s3:ObjectRemoved:Delete
            Function: !Sub arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:${Application}-${Environment}-MerchantUser-S3Notification-Function
      PublicAccessBlockConfiguration:
            BlockPublicAcls : true
            BlockPublicPolicy : true
            IgnorePublicAcls : true
            RestrictPublicBuckets : true
      Tags:
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "Application"
          Value: !Ref Application

